apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'


buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}



group = 'co.ceiba.parqueadero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/reports/jacoco")
}

repositories {
	mavenCentral()
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

sourceSets {
    api
    impl
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	 apiCompile 'commons-codec:commons-codec:1.5'
    implCompile sourceSets.api.output
    implCompile 'commons-lang:commons-lang:2.6'
    testCompile 'junit:junit:4.9'
    testCompile sourceSets.api.output
    testCompile sourceSets.impl.output
    runtime configurations.apiRuntime
    runtime configurations.implRuntime
    compile("org.mockito:mockito-all:1.9.5")
}

jar {
    from sourceSets.api.output
    from sourceSets.impl.output
}

test {
	jacoco {
		append = false
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
	}
}

jacocoTestReport{
	reports {
        xml.enabled false
        csv.enabled false
        html.destination file("$buildDir/reports/jacoco/jacocoHtml")
    }
}
jacocoTestReport.dependsOn(test)

